const allQuestions = [
  {
    question: "‚è∞ Your alarm rings in the morning. What‚Äôs your move?",
    options: ["üò¥ 5 more minutes‚Ä¶", "ü§¨ Throw the alarm out the window", "üï∫ Start dancing out of bed"],
  },
  {
    question: "üçï You‚Äôre super hungry but too lazy to cook. What happens?",
    options: ["üì± Order food online", "ü•´ Eat instant noodles", "üò¥ Sleep the hunger away"],
  },
  {
    question: "üì± Phone battery is 1% during a boring lecture. What do you do?",
    options: ["üôÑ Stare at the teacher", "‚úçÔ∏è Start doodling", "üòá Pray the phone lasts"],
  },
  {
    question: "üö¶ Stuck at traffic light. How do you pass the time?",
    options: ["üé§ Sing loudly", "ü§≥ Check phone again & again", "üëÄ Stare at strangers"],
  },
  {
    question: "üìö Big assignment due tomorrow. What‚Äôs your plan?",
    options: ["üòÖ Start at midnight", "üôÉ Ignore and chill", "üìù Finish like a hero last minute"],
  },
  {
    question: "üõèÔ∏è You‚Äôre too tired but friends call you out. Your reaction?",
    options: ["üòë Fake excuses", "‚ö° Go anyway (regret later)", "üòÇ Invite them to your place instead"],
  },
  {
    question: "üç´ Your friend offers chocolate but you‚Äôre on a diet. What‚Äôs next?",
    options: ["üòà Eat it anyway", "üôÖ Say no like a saint", "ü§ù Take half and smile"],
  },
  {
    question: "üõí At a mall, you see a SALE sign. What‚Äôs your instinct?",
    options: ["üí∏ Spend all savings", "üòê Walk away bravely", "üõçÔ∏è Buy one thing, feel guilty later"],
  },
  {
    question: "üéß Headphones on, favorite song plays. You‚Ä¶",
    options: ["üíÉ Dance in public", "üòé Pretend you‚Äôre in a music video", "üé§ Sing out loud"],
  },
  {
    question: "üî• WiFi is gone. What do you do?",
    options: ["üì¥ Restart router 100 times", "üò± Panic mode", "üõå Sleep instantly"],
  },
  {
    question: "üçü Fries fell on the floor. Next move?",
    options: ["ü§î 5 second rule", "üò© Cry silently", "üê∂ Feed it to imaginary dog"],
  },
  {
    question: "üìû Phone rings from unknown number. You‚Ä¶",
    options: ["üôÖ Decline instantly", "üì¢ Answer dramatically", "üò∂ Ignore forever"],
  },
  {
    question: "üòµ You sent a message to the wrong person. Reaction?",
    options: ["üò± Panic delete", "üòÇ Pretend it was a joke", "ü§° Ignore like nothing happened"],
  },
  {
    question: "‚òï No coffee in the morning. You become‚Ä¶",
    options: ["üëπ A monster", "üò¥ Sleepy zombie", "ü§ê Silent philosopher"],
  },
  {
    question: "üõë Procrastination hits hard. What‚Äôs your escape?",
    options: ["üé¨ Watch Netflix", "üçî Eat random snacks", "üßπ Clean the whole house"],
  },
  {
    question: "üëï You spilled food on your shirt outside. Now what?",
    options: ["üôà Hide it with a bag", "ü§• Blame someone else", "üòé Own it like a fashion trend"],
  },
  {
    question: "üí§ Can‚Äôt sleep at 3AM. You‚Ä¶",
    options: ["üì± Scroll memes endlessly", "ü•õ Drink milk", "üßò Try meditation (fail)"],
  },
  {
    question: "üéÇ Your birthday comes. What‚Äôs your vibe?",
    options: ["üéâ Throw a big party", "üéÇ Eat cake alone happily", "üôÉ Forget it‚Äôs your bday"],
  },
  {
    question: "üí∏ Found money in your pocket. You‚Ä¶",
    options: ["ü§ë Spend immediately", "üòä Save it", "üç¶ Buy ice cream"],
  },
  {
    question: "üì∫ Watching a horror movie. You are‚Ä¶",
    options: ["üò± Screaming", "üòÇ Laughing at characters", "üôà Hiding under blanket"],
  }
];

// Pick 10 random unique questions each game
function getRandomQuestions() {
  const shuffled = [...allQuestions].sort(() => Math.random() - 0.5);
  return shuffled.slice(0, 10);
}

// Shuffle options
function shuffleOptions(options) {
  return options.sort(() => Math.random() - 0.5);
}

let questions = getRandomQuestions();
let currentQuestionIndex = 0;
let score = 0;
let timer;
const timeLimit = 10; // seconds per question

const questionEl = document.getElementById("question");
const optionsEl = document.getElementById("options");
const timerEl = document.getElementById("timer");

function loadQuestion() {
  clearTimeout(timer);
  if (currentQuestionIndex >= questions.length) {
    localStorage.setItem("score", score);
    window.location.href = "result.html";
    return;
  }

  const q = questions[currentQuestionIndex];
  questionEl.textContent = q.question;
  optionsEl.innerHTML = "";

  let shuffledOptions = shuffleOptions([...q.options]);
  shuffledOptions.forEach(option => {
    const btn = document.createElement("button");
    btn.textContent = option;
    btn.className = "option-btn";
    btn.onclick = () => {
      score++; // Each answered question adds to score
      nextQuestion();
    };
    optionsEl.appendChild(btn);
  });

  startTimer();
}

function startTimer() {
  let timeLeft = timeLimit;
  timerEl.textContent = `‚è≥ ${timeLeft}s`;

  timer = setInterval(() => {
    timeLeft--;
    timerEl.textContent = `‚è≥ ${timeLeft}s`;

    if (timeLeft <= 0) {
      clearInterval(timer);
      nextQuestion(); // Skip if not answered
    }
  }, 1000);
}

function nextQuestion() {
  clearTimeout(timer);
  currentQuestionIndex++;
  loadQuestion();
}

loadQuestion();
